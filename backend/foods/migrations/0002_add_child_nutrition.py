# Generated by Django 4.2.23 on 2025-06-17 01:46

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('foods', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CNFoodCategory',
            fields=[
                ('code', models.IntegerField(help_text='Food category code', primary_key=True, serialize=False)),
                ('description', models.CharField(help_text='Category description', max_length=200)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CN Food Category',
                'verbose_name_plural': 'CN Food Categories',
                'db_table': 'cn_food_category',
            },
        ),
        migrations.CreateModel(
            name='CNGPCName',
            fields=[
                ('gpc_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('gpc_description', models.CharField(max_length=500)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CN GPC Name',
                'verbose_name_plural': 'CN GPC Names',
                'db_table': 'cn_gpc_name',
            },
        ),
        migrations.CreateModel(
            name='CNNutrient',
            fields=[
                ('code', models.IntegerField(help_text='Nutrient code', primary_key=True, serialize=False)),
                ('description', models.CharField(help_text='Nutrient description', max_length=200)),
                ('description_abbrev', models.CharField(help_text='Abbreviated description', max_length=50)),
                ('unit', models.CharField(help_text='Nutrient unit', max_length=20)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CN Nutrient',
                'verbose_name_plural': 'CN Nutrients',
                'db_table': 'cn_nutrient',
            },
        ),
        migrations.CreateModel(
            name='CNFood',
            fields=[
                ('cn_code', models.IntegerField(help_text='Child Nutrition code', primary_key=True, serialize=False)),
                ('descriptor', models.TextField(help_text='Full food description')),
                ('abbreviated_descriptor', models.CharField(help_text='Abbreviated description', max_length=200)),
                ('gtin', models.CharField(blank=True, help_text='Global Trade Item Number', max_length=20, null=True)),
                ('product_code', models.CharField(blank=True, max_length=50, null=True)),
                ('brand_owner_name', models.CharField(blank=True, max_length=200, null=True)),
                ('brand_name', models.CharField(blank=True, max_length=200, null=True)),
                ('fns_material_number', models.CharField(blank=True, max_length=50, null=True)),
                ('source_code', models.IntegerField(blank=True, null=True)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('discontinued_date', models.DateField(blank=True, null=True)),
                ('form_of_food', models.CharField(blank=True, max_length=100, null=True)),
                ('fdc_id', models.IntegerField(blank=True, help_text='FoodData Central ID', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('food_category', models.ForeignKey(help_text='Food category', on_delete=django.db.models.deletion.CASCADE, to='foods.cnfoodcategory')),
                ('gpc_product_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='foods.cngpcname')),
            ],
            options={
                'verbose_name': 'CN Food',
                'verbose_name_plural': 'CN Foods',
                'db_table': 'cn_food',
            },
        ),
        migrations.CreateModel(
            name='CNWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_num', models.IntegerField(help_text='Sequence number')),
                ('amount', models.FloatField(help_text='Amount')),
                ('measure_description', models.CharField(help_text='Measure description', max_length=200)),
                ('unit_amount', models.FloatField(help_text='Unit amount')),
                ('type_of_unit', models.CharField(help_text='Type of unit (e.g., g, ml)', max_length=20)),
                ('source_code', models.IntegerField(blank=True, null=True)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('cn_food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weights', to='foods.cnfood')),
            ],
            options={
                'verbose_name': 'CN Weight',
                'verbose_name_plural': 'CN Weights',
                'db_table': 'cn_weight',
                'indexes': [models.Index(fields=['cn_food'], name='cn_weight_cn_food_f5996f_idx')],
                'unique_together': {('cn_food', 'sequence_num')},
            },
        ),
        migrations.CreateModel(
            name='CNNutrientValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrient_value', models.FloatField(help_text='Nutrient value')),
                ('per_unit', models.CharField(default='100g', help_text='Per unit (e.g., 100g)', max_length=20)),
                ('value_type_code', models.IntegerField(blank=True, null=True)),
                ('source_code', models.IntegerField(blank=True, null=True)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('cn_food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrient_values', to='foods.cnfood')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.cnnutrient')),
            ],
            options={
                'verbose_name': 'CN Nutrient Value',
                'verbose_name_plural': 'CN Nutrient Values',
                'db_table': 'cn_nutrient_value',
                'indexes': [models.Index(fields=['cn_food', 'nutrient'], name='cn_nutrient_cn_food_cc7d3a_idx'), models.Index(fields=['nutrient'], name='cn_nutrient_nutrien_a83128_idx')],
                'unique_together': {('cn_food', 'nutrient')},
            },
        ),
        migrations.AddIndex(
            model_name='cnfood',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='cn_food_search__b9cc1b_gin'),
        ),
        migrations.AddIndex(
            model_name='cnfood',
            index=models.Index(fields=['food_category'], name='cn_food_food_ca_3e50bb_idx'),
        ),
        migrations.AddIndex(
            model_name='cnfood',
            index=models.Index(fields=['gtin'], name='cn_food_gtin_97feb4_idx'),
        ),
        migrations.AddIndex(
            model_name='cnfood',
            index=models.Index(fields=['fdc_id'], name='cn_food_fdc_id_cbfdb3_idx'),
        ),
    ]
