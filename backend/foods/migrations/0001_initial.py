# Generated by Django 4.2.23 on 2025-06-17 01:07

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Food Categories',
                'db_table': 'food_category',
            },
        ),
        migrations.CreateModel(
            name='FoundationFood',
            fields=[
                ('fdc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ndb_number', models.IntegerField(blank=True, null=True)),
                ('footnote', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'foundation_food',
            },
        ),
        migrations.CreateModel(
            name='MeasureUnit',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'measure_unit',
            },
        ),
        migrations.CreateModel(
            name='SrLegacyFood',
            fields=[
                ('fdc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ndb_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sr_legacy_food',
            },
        ),
        migrations.CreateModel(
            name='SurveyFnddsFood',
            fields=[
                ('fdc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('food_code', models.IntegerField(blank=True, null=True)),
                ('wweia_category_code', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_fndds_food',
            },
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('unit_name', models.CharField(max_length=20)),
                ('nutrient_nbr', models.CharField(blank=True, max_length=10, null=True)),
                ('rank', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'nutrient',
                'ordering': ['rank', 'name'],
                'indexes': [models.Index(fields=['rank', 'name'], name='nutrient_rank_cf8771_idx')],
            },
        ),
        migrations.CreateModel(
            name='FoodPortion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fdc_id', models.IntegerField()),
                ('seq_num', models.IntegerField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('measure_unit_id', models.IntegerField(blank=True, null=True)),
                ('portion_description', models.CharField(blank=True, max_length=200, null=True)),
                ('modifier', models.CharField(blank=True, max_length=200, null=True)),
                ('gram_weight', models.FloatField(blank=True, null=True)),
                ('data_points', models.IntegerField(blank=True, null=True)),
                ('footnote', models.TextField(blank=True, null=True)),
                ('min_year_acquired', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'food_portion',
                'indexes': [models.Index(fields=['fdc_id'], name='food_portio_fdc_id_21c2f9_idx')],
            },
        ),
        migrations.CreateModel(
            name='FoodNutrient',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('fdc_id', models.IntegerField()),
                ('nutrient_id', models.IntegerField()),
                ('amount', models.FloatField(blank=True, null=True)),
                ('data_points', models.IntegerField(blank=True, null=True)),
                ('derivation_id', models.IntegerField(blank=True, null=True)),
                ('min', models.FloatField(blank=True, null=True)),
                ('max', models.FloatField(blank=True, null=True)),
                ('median', models.FloatField(blank=True, null=True)),
                ('loq', models.CharField(blank=True, max_length=10, null=True)),
                ('footnote', models.TextField(blank=True, null=True)),
                ('min_year_acquired', models.IntegerField(blank=True, null=True)),
                ('percent_daily_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'food_nutrient',
                'indexes': [models.Index(fields=['fdc_id'], name='food_nutrie_fdc_id_901e75_idx'), models.Index(fields=['nutrient_id'], name='food_nutrie_nutrien_c785f7_idx'), models.Index(fields=['fdc_id', 'nutrient_id'], name='food_nutrie_fdc_id_2c94ac_idx')],
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('fdc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('food_category_id', models.IntegerField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
            options={
                'db_table': 'food',
                'indexes': [models.Index(fields=['data_type'], name='food_data_ty_a01f7d_idx'), models.Index(fields=['food_category_id'], name='food_food_ca_0c49b1_idx'), django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='food_search__8006ed_gin')],
            },
        ),
        migrations.CreateModel(
            name='BrandedFood',
            fields=[
                ('fdc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('brand_owner', models.CharField(blank=True, max_length=500, null=True)),
                ('brand_name', models.CharField(blank=True, max_length=500, null=True)),
                ('subbrand_name', models.CharField(blank=True, max_length=500, null=True)),
                ('gtin_upc', models.CharField(blank=True, max_length=50, null=True)),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('not_a_significant_source_of', models.TextField(blank=True, null=True)),
                ('serving_size', models.FloatField(blank=True, null=True)),
                ('serving_size_unit', models.CharField(blank=True, max_length=50, null=True)),
                ('household_serving_fulltext', models.CharField(blank=True, max_length=500, null=True)),
                ('branded_food_category', models.CharField(blank=True, max_length=500, null=True)),
                ('data_source', models.CharField(blank=True, max_length=100, null=True)),
                ('package_weight', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('available_date', models.DateField(blank=True, null=True)),
                ('market_country', models.CharField(blank=True, max_length=100, null=True)),
                ('discontinued_date', models.DateField(blank=True, null=True)),
                ('preparation_state_code', models.CharField(blank=True, max_length=100, null=True)),
                ('trade_channel', models.CharField(blank=True, max_length=200, null=True)),
                ('short_description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'branded_food',
                'indexes': [models.Index(fields=['gtin_upc'], name='branded_foo_gtin_up_fc2b4b_idx'), models.Index(fields=['brand_owner'], name='branded_foo_brand_o_d10e47_idx'), models.Index(fields=['branded_food_category'], name='branded_foo_branded_4ea070_idx')],
            },
        ),
    ]
